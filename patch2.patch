diff --git a/.idea/fabex.iml b/.idea/fabex.iml
index c956989..01865b7 100644
--- a/.idea/fabex.iml
+++ b/.idea/fabex.iml
@@ -4,5 +4,6 @@
     <content url="file://$MODULE_DIR$" />
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Bundled Protobuf Distribution" level="application" />
   </component>
 </module>
\ No newline at end of file
diff --git a/.idea/misc.xml b/.idea/misc.xml
deleted file mode 100644
index 28a804d..0000000
--- a/.idea/misc.xml
+++ /dev/null
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="JavaScriptSettings">
-    <option name="languageLevel" value="ES6" />
-  </component>
-</project>
\ No newline at end of file
diff --git a/.idea/modules.xml b/.idea/modules.xml
index 59506a5..69ab42f 100644
--- a/.idea/modules.xml
+++ b/.idea/modules.xml
@@ -2,7 +2,7 @@
 <project version="4">
   <component name="ProjectModuleManager">
     <modules>
-      <module fileurl="file://$PROJECT_DIR$/.idea/git.iml" filepath="$PROJECT_DIR$/.idea/git.iml" />
+      <module fileurl="file://$PROJECT_DIR$/.idea/fabex.iml" filepath="$PROJECT_DIR$/.idea/fabex.iml" />
     </modules>
   </component>
 </project>
\ No newline at end of file
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
deleted file mode 100644
index f827af9..0000000
--- a/.idea/vcs.xml
+++ /dev/null
@@ -1,25 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/aviso" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/blockchain-network-on-kubernetes" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/ethgoutils" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/exmo_api_lib" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/fabric" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/fabric-ca" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/fabric-chaincode-node" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/fabric-samples" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/fabric-sdk-go" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/fabric-sdk-java" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/fabric-sdk-node" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/fabric/fabric-ca" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/go-ethereum" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/lockinblock" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/prysm" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/seeds" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/simple-grpc-echo" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/workchain" vcs="Git" />
-    <mapping directory="$PROJECT_DIR$/worknroll2" vcs="Git" />
-  </component>
-</project>
\ No newline at end of file
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
index 28da9d5..a027f41 100644
--- a/.idea/workspace.xml
+++ b/.idea/workspace.xml
@@ -2,17 +2,24 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="c46cb33d-9f8e-485d-9f02-ee572b3002ed" name="Default Changelist" comment="chaincode payload unmarshaling and value decoding">
+      <change beforePath="$PROJECT_DIR$/.idea/fabex.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/fabex.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/blockfetcher/blockfetcher.go" beforeDir="false" afterPath="$PROJECT_DIR$/blockfetcher/blockfetcher.go" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/client/client.go" beforeDir="false" afterPath="$PROJECT_DIR$/client/client.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/config.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/config.yaml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/db/db.go" beforeDir="false" afterPath="$PROJECT_DIR$/db/db.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/db/mongodb.go" beforeDir="false" afterPath="$PROJECT_DIR$/db/mongodb.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/db/postgres.go" beforeDir="false" afterPath="$PROJECT_DIR$/db/postgres.go" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/fabex.go" beforeDir="false" afterPath="$PROJECT_DIR$/fabex.go" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/helpers/helpers.go" beforeDir="false" afterPath="$PROJECT_DIR$/helpers/helpers.go" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/models/models.go" beforeDir="false" afterPath="$PROJECT_DIR$/models/models.go" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/readme.md" beforeDir="false" afterPath="$PROJECT_DIR$/readme.md" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/proto/fabex.pb.go" beforeDir="false" afterPath="$PROJECT_DIR$/proto/fabex.pb.go" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/proto/fabex.proto" beforeDir="false" afterPath="$PROJECT_DIR$/proto/fabex.proto" afterDir="false" />
     </list>
-    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -32,94 +39,6 @@
     <expand />
     <select />
   </component>
-  <component name="FileEditorManager">
-    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
-      <file pinned="true" current-in-tab="false">
-        <entry file="remoteDeploymentFS://&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/models/models.go">
-          <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="54">
-              <caret line="10" column="33" lean-forward="true" selection-start-line="10" selection-start-column="33" selection-end-line="10" selection-end-column="33" />
-            </state>
-          </provider>
-        </entry>
-      </file>
-      <file pinned="false" current-in-tab="false">
-        <entry file="file://$PROJECT_DIR$/helpers/helpers.go">
-          <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="-621">
-              <caret line="32" column="22" lean-forward="true" selection-start-line="32" selection-start-column="22" selection-end-line="32" selection-end-column="22" />
-            </state>
-          </provider>
-        </entry>
-      </file>
-      <file pinned="true" current-in-tab="false">
-        <entry file="remoteDeploymentFS://&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/helpers/helpers.go">
-          <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="127">
-              <caret line="69" column="49" selection-start-line="69" selection-start-column="38" selection-end-line="69" selection-end-column="49" />
-            </state>
-          </provider>
-        </entry>
-      </file>
-      <file pinned="true" current-in-tab="false">
-        <entry file="remoteDeploymentFS://&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/db/db.go">
-          <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="36">
-              <caret line="2" column="14" selection-start-line="2" selection-start-column="5" selection-end-line="2" selection-end-column="14" />
-            </state>
-          </provider>
-        </entry>
-      </file>
-      <file pinned="true" current-in-tab="false">
-        <entry file="remoteDeploymentFS://&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/db/postgres.go">
-          <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="720">
-              <caret line="40" column="53" selection-start-line="40" selection-start-column="53" selection-end-line="40" selection-end-column="53" />
-              <folding>
-                <element signature="e#12#75#0" expanded="true" />
-              </folding>
-            </state>
-          </provider>
-        </entry>
-      </file>
-      <file pinned="true" current-in-tab="false">
-        <entry file="remoteDeploymentFS://&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/db/mongodb.go">
-          <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="126">
-              <caret line="13" column="12" selection-start-line="13" selection-start-column="5" selection-end-line="13" selection-end-column="12" />
-              <folding>
-                <element signature="e#12#75#0" expanded="true" />
-              </folding>
-            </state>
-          </provider>
-        </entry>
-      </file>
-      <file pinned="true" current-in-tab="false">
-        <entry file="remoteDeploymentFS://&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/fabex.go">
-          <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="72">
-              <caret line="96" column="22" selection-start-line="96" selection-start-column="22" selection-end-line="96" selection-end-column="22" />
-              <folding>
-                <element signature="e#14#543#0" expanded="true" />
-              </folding>
-            </state>
-          </provider>
-        </entry>
-      </file>
-      <file pinned="false" current-in-tab="true">
-        <entry file="file://$PROJECT_DIR$/readme.md">
-          <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
-            <state split_layout="SPLIT">
-              <first_editor relative-caret-position="216">
-                <caret line="33" column="34" selection-start-line="33" selection-start-column="34" selection-end-line="33" selection-end-column="34" />
-              </first_editor>
-              <second_editor />
-            </state>
-          </provider>
-        </entry>
-      </file>
-    </leaf>
-  </component>
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
@@ -127,111 +46,10 @@
       </list>
     </option>
   </component>
-  <component name="FindInProjectRecents">
-    <findStrings>
-      <find>handle</find>
-      <find>connec</find>
-      <find>fabex</find>
-      <find>Db</find>
-      <find>config</find>
-      <find>LedgerClient</find>
-      <find>dura</find>
-      <find>can't fin</find>
-      <find>can't find</find>
-      <find>can't fi</find>
-      <find>explo</find>
-      <find>all blo</find>
-      <find>*int</find>
-      <find>all bloc</find>
-      <find>Can't find data with hash</find>
-      <find>blocks sa</find>
-      <find>a</find>
-      <find>stra</find>
-      <find>error unma</find>
-      <find>error unmar</find>
-      <find>error unm</find>
-      <find>error unmarshaling</find>
-      <find>error un</find>
-      <find>queryres</find>
-      <find>db</find>
-      <find>dbma</find>
-      <find>dbman</find>
-      <find>explore</find>
-      <find>dbmana</find>
-      <find>connected</find>
-    </findStrings>
-    <replaceStrings>
-      <replace>chainhelpers</replace>
-      <replace>127.0.0.1</replace>
-      <replace>0.0.0.0</replace>
-      <replace>localhost</replace>
-    </replaceStrings>
-    <dirStrings>
-      <dir>C:\git\supply\server</dir>
-      <dir>C:\git\supply\quorum</dir>
-    </dirStrings>
-  </component>
   <component name="GOROOT" path="C:\Go" />
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="IdeDocumentHistory">
-    <option name="CHANGED_PATHS">
-      <list>
-        <option value="$PROJECT_DIR$/server/db/db.go" />
-        <option value="$PROJECT_DIR$/server/contracts.md" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/supply/contracts/Tracker.sol" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/models/models.go" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/supply/contracts/mainrunner/main.go" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/config.yaml" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/contracts.md" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/e2e_test.go" />
-        <option value="$PROJECT_DIR$/server/handlers/handlers_test.go" />
-        <option value="$PROJECT_DIR$/server/handlers_test.go" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/handlers_test.go" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/testsupply/handlers_test.go" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/testsupply/handlers_bench" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/testsupply/handlers_bench.go" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/benchmark/handlers_bench.go" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/downloader.go" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/config.yaml" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/fabric-samples/first-network/docker-compose-ca.yaml" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/connection-profile.yaml" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/benchmark/bench_test.go" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/router/router.go" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/testsupply/e2e_test.go" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/supply/contracts/manager.go" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/supply/contracts/go.mod" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/go.mod" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/loadtest/load.go" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/db/enhanceddriver.go" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/handlers/handlers.go" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/db/db.go" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/cmd/main.go" />
-        <option value="&lt;d531790b-52c7-4eb1-84e1-0ad247ffcb4b&gt;/home/ubuntu/server/supply.go" />
-        <option value="$PROJECT_DIR$/server/loadtest/load.go" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/readme.md" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/main.go" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/config.yaml" />
-        <option value="$PROJECT_DIR$/proto/tx.proto.go" />
-        <option value="$PROJECT_DIR$/proto/fabex.proto" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/proto/fabex.pb.go" />
-        <option value="$PROJECT_DIR$/client/client.go" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/proto/fabex.proto" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/blockfetcher/blockfetcher.go" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/client/client.go" />
-        <option value="$PROJECT_DIR$/helpers/helpers.go" />
-        <option value="$PROJECT_DIR$/fabex.go" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/models/models.go" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/helpers/helpers.go" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/db/db.go" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/db/postgres.go" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/db/mongodb.go" />
-        <option value="&lt;30d90abf-0243-424f-9e71-4890d48f9179&gt;/home/ubuntu/explorer/ali/go-sdk-demo/fabex.go" />
-        <option value="$PROJECT_DIR$/readme.md" />
-      </list>
-    </option>
-  </component>
   <component name="ProjectFrameBounds" extendedState="6">
     <option name="x" value="240" />
     <option name="y" value="127" />
@@ -239,50 +57,6 @@
     <option name="height" value="765" />
   </component>
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
-  <component name="ProjectView">
-    <navigator proportions="" version="1">
-      <foldersAlwaysOnTop value="true" />
-    </navigator>
-    <panes>
-      <pane id="ProjectPane">
-        <subPane>
-          <expand>
-            <path>
-              <item name="fabex" type="b2602c69:ProjectViewProjectNode" />
-              <item name="fabex" type="462c0819:PsiDirectoryNode" />
-            </path>
-            <path>
-              <item name="fabex" type="b2602c69:ProjectViewProjectNode" />
-              <item name="fabex" type="462c0819:PsiDirectoryNode" />
-              <item name="blockfetcher" type="462c0819:PsiDirectoryNode" />
-            </path>
-            <path>
-              <item name="fabex" type="b2602c69:ProjectViewProjectNode" />
-              <item name="fabex" type="462c0819:PsiDirectoryNode" />
-              <item name="client" type="462c0819:PsiDirectoryNode" />
-            </path>
-            <path>
-              <item name="fabex" type="b2602c69:ProjectViewProjectNode" />
-              <item name="fabex" type="462c0819:PsiDirectoryNode" />
-              <item name="db" type="462c0819:PsiDirectoryNode" />
-            </path>
-            <path>
-              <item name="fabex" type="b2602c69:ProjectViewProjectNode" />
-              <item name="fabex" type="462c0819:PsiDirectoryNode" />
-              <item name="helpers" type="462c0819:PsiDirectoryNode" />
-            </path>
-            <path>
-              <item name="fabex" type="b2602c69:ProjectViewProjectNode" />
-              <item name="fabex" type="462c0819:PsiDirectoryNode" />
-              <item name="proto" type="462c0819:PsiDirectoryNode" />
-            </path>
-          </expand>
-          <select />
-        </subPane>
-      </pane>
-      <pane id="Scope" />
-    </panes>
-  </component>
   <component name="PropertiesComponent">
     <property name="DatabaseDriversLRU" value="postgresql" />
     <property name="DefaultGoTemplateProperty" value="Go File" />
@@ -299,6 +73,8 @@
     <property name="go.sdk.automatically.set" value="true" />
     <property name="go.vendoring.notification.had.been.shown" value="true" />
     <property name="last_opened_file_path" value="$USER_HOME$" />
+    <property name="node.js.path.for.package.tslint" value="project" />
+    <property name="node.js.selected.package.tslint" value="(autodetect)" />
     <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
     <property name="nodejs_npm_path_reset_for_default_project" value="true" />
     <property name="nodejs_package_manager_path" value="npm" />
@@ -308,15 +84,15 @@
       <recent name="C:\git\supply\server" />
     </key>
   </component>
-  <component name="RunDashboard">
-    <option name="ruleStates">
+  <component name="ServiceViewManager">
+    <option name="viewStates">
       <list>
-        <RuleState>
-          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
-        </RuleState>
-        <RuleState>
-          <option name="name" value="StatusDashboardGroupingRule" />
-        </RuleState>
+        <serviceView>
+          <treeState>
+            <expand />
+            <select />
+          </treeState>
+        </serviceView>
       </list>
     </option>
   </component>
@@ -329,56 +105,6 @@
       <is-autoscroll-to-source value="true" />
     </todo-panel>
   </component>
-  <component name="ToolWindowManager">
-    <frame x="-7" y="-7" width="1295" height="695" extended-state="6" />
-    <editor active="true" />
-    <layout>
-      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.080032334" />
-      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
-      <window_info id="Favorites" order="2" side_tool="true" />
-      <window_info anchor="bottom" id="Message" order="0" />
-      <window_info anchor="bottom" id="Find" order="1" weight="0.32978722" />
-      <window_info anchor="bottom" id="Run" order="2" weight="0.3280142" />
-      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
-      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
-      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
-      <window_info anchor="bottom" id="TODO" order="6" weight="0.32978722" />
-      <window_info anchor="bottom" id="Database Changes" order="7" />
-      <window_info anchor="bottom" id="Version Control" order="8" weight="0.34127843" />
-      <window_info active="true" anchor="bottom" id="Terminal" order="9" visible="true" weight="0.3617021" />
-      <window_info anchor="bottom" id="Event Log" order="10" side_tool="true" weight="0.32978722" />
-      <window_info anchor="bottom" id="Docker" order="11" show_stripe_button="false" />
-      <window_info anchor="bottom" id="File Transfer" order="12" weight="0.3280142" />
-      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
-      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
-      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
-      <window_info anchor="right" id="Database" order="3" weight="0.32983023" />
-      <window_info anchor="right" id="Remote Host" order="4" visible="true" weight="0.22554567" />
-    </layout>
-    <layout-to-restore>
-      <window_info content_ui="combo" id="Project" order="0" weight="0.1738076" />
-      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
-      <window_info id="Favorites" order="2" side_tool="true" />
-      <window_info anchor="bottom" id="Message" order="0" />
-      <window_info anchor="bottom" id="Find" order="1" weight="0.32978722" />
-      <window_info anchor="bottom" id="Run" order="2" weight="0.3280142" />
-      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
-      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
-      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
-      <window_info anchor="bottom" id="TODO" order="6" weight="0.32978722" />
-      <window_info anchor="bottom" id="Database Changes" order="7" />
-      <window_info anchor="bottom" id="Version Control" order="8" weight="0.32978722" />
-      <window_info anchor="bottom" id="Terminal" order="9" weight="0.27304965" />
-      <window_info anchor="bottom" id="Event Log" order="10" side_tool="true" weight="0.32978722" />
-      <window_info anchor="bottom" id="Docker" order="11" show_stripe_button="false" />
-      <window_info anchor="bottom" id="File Transfer" order="12" visible="true" weight="0.3280142" />
-      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
-      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
-      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
-      <window_info anchor="right" id="Database" order="3" weight="0.32983023" />
-      <window_info active="true" anchor="right" id="Remote Host" order="4" visible="true" weight="0.22473727" />
-    </layout-to-restore>
-  </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="1" />
   </component>
@@ -388,20 +114,7 @@
         <entry key="MAIN">
           <value>
             <State>
-              <option name="RECENTLY_FILTERED_USER_GROUPS">
-                <collection />
-              </option>
-              <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
-                <collection />
-              </option>
-              <option name="COLUMN_ORDER">
-                <list>
-                  <option value="0" />
-                  <option value="1" />
-                  <option value="2" />
-                  <option value="3" />
-                </list>
-              </option>
+              <option name="COLUMN_ORDER" />
             </State>
           </value>
         </entry>
@@ -439,71 +152,22 @@
     <MESSAGE value="Chaincode independence added" />
     <MESSAGE value="chaincode payload unmarshaling and value decoding" />
     <MESSAGE value="-" />
-    <option name="LAST_COMMIT_MESSAGE" value="-" />
+    <MESSAGE value="fix CC model" />
+    <option name="LAST_COMMIT_MESSAGE" value="fix CC model" />
     <option name="REFORMAT_BEFORE_PROJECT_COMMIT" value="true" />
   </component>
-  <component name="editorHistoryManager">
-    <entry file="file://$PROJECT_DIR$/exmo_api_lib/golang/lib/lib.go" />
-    <entry file="file://$PROJECT_DIR$/exmo_api_lib/golang/example.go" />
-    <entry file="file://$PROJECT_DIR$/exmo_api_lib/golang/go.mod" />
-    <entry file="file://$PROJECT_DIR$/exmo_api_lib/golang/lib/go.mod" />
-    <entry file="file://$PROJECT_DIR$/exmo_api_lib/golang/lib/lib_test.go" />
-    <entry file="file://$PROJECT_DIR$/quorum/contracts/chainhelpers/helpers.go" />
-    <entry file="file://$PROJECT_DIR$/quorum/contracts/manager.go" />
-    <entry file="file://$PROJECT_DIR$/server/router/router.go" />
-    <entry file="file://$PROJECT_DIR$/quorum/contracts/mainrunner/main.go" />
-    <entry file="file://$PROJECT_DIR$/server/supply.go" />
-    <entry file="file://$PROJECT_DIR$/server/handlers/handlers.go" />
-    <entry file="file://$PROJECT_DIR$/server/contracts.md" />
-    <entry file="file://$PROJECT_DIR$/server/handlers_test.go" />
-    <entry file="file://$PROJECT_DIR$/server/loadtest/load.go" />
-    <entry file="file://$PROJECT_DIR$/server/db/db.go" />
-    <entry file="file://$PROJECT_DIR$/server/config.yaml" />
-    <entry file="file://$PROJECT_DIR$/server/cmd/main.go" />
-    <entry file="file://$PROJECT_DIR$/config.yaml">
-      <provider selected="true" editor-type-id="text-editor" />
-    </entry>
-    <entry file="file://$PROJECT_DIR$/proto/tx.proto.go" />
-    <entry file="file://$PROJECT_DIR$/proto/fabex.proto">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="252">
-          <caret line="14" column="20" selection-start-line="14" selection-start-column="20" selection-end-line="14" selection-end-column="20" />
-        </state>
-      </provider>
-    </entry>
-    <entry file="file://$PROJECT_DIR$/client/client.go">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="186">
-          <caret line="38" selection-start-line="38" selection-end-line="38" />
-        </state>
-      </provider>
-    </entry>
-    <entry file="file://$PROJECT_DIR$/fabex.go">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="72">
-          <caret line="94" column="33" lean-forward="true" selection-start-line="94" selection-start-column="33" selection-end-line="94" selection-end-column="33" />
-          <folding>
-            <element signature="e#14#543#0" expanded="true" />
-          </folding>
-        </state>
-      </provider>
-    </entry>
-    <entry file="file://$PROJECT_DIR$/helpers/helpers.go">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="-621">
-          <caret line="32" column="22" lean-forward="true" selection-start-line="32" selection-start-column="22" selection-end-line="32" selection-end-column="22" />
-        </state>
-      </provider>
-    </entry>
-    <entry file="file://$PROJECT_DIR$/readme.md">
-      <provider selected="true" editor-type-id="split-provider[text-editor;markdown-preview-editor]">
-        <state split_layout="SPLIT">
-          <first_editor relative-caret-position="216">
-            <caret line="33" column="34" selection-start-line="33" selection-start-column="34" selection-end-line="33" selection-end-column="34" />
-          </first_editor>
-          <second_editor />
-        </state>
-      </provider>
-    </entry>
+  <component name="WindowStateProjectService">
+    <state x="2443" y="50" width="864" height="987" key="CommitChangelistDialog2" timestamp="1580127179396">
+      <screen x="0" y="27" width="3840" height="1053" />
+    </state>
+    <state x="2443" y="50" width="864" height="987" key="CommitChangelistDialog2/0.27.3840.1053@0.27.3840.1053" timestamp="1580127179396" />
+    <state x="2475" y="272" width="800" height="543" key="Vcs.Push.Dialog.v2" timestamp="1580127189958">
+      <screen x="0" y="27" width="3840" height="1053" />
+    </state>
+    <state x="2475" y="272" width="800" height="543" key="Vcs.Push.Dialog.v2/0.27.3840.1053@0.27.3840.1053" timestamp="1580127189958" />
+    <state x="2518" y="255" width="724" height="570" key="find.popup" timestamp="1580138722245">
+      <screen x="0" y="27" width="3840" height="1053" />
+    </state>
+    <state x="2518" y="255" width="724" height="570" key="find.popup/0.27.3840.1053@0.27.3840.1053" timestamp="1580138722245" />
   </component>
 </project>
\ No newline at end of file
diff --git a/blockfetcher/blockfetcher.go b/blockfetcher/blockfetcher.go
index bfde11a..8723091 100644
--- a/blockfetcher/blockfetcher.go
+++ b/blockfetcher/blockfetcher.go
@@ -4,6 +4,7 @@ import (
 	"encoding/hex"
 	"encoding/json"
 	"fmt"
+	"github.com/vadiminshakov/fabex/models"
 	"github.com/golang/protobuf/proto"
 	"github.com/hyperledger/fabric-sdk-go/pkg/client/ledger"
 	"github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/rwsetutil"
@@ -13,14 +14,7 @@ import (
 )
 
 type CustomBlock struct {
-	Txs []Tx
-}
-
-type Tx struct {
-	Hash     string
-	Blocknum uint64
-	Txid     string
-	Payload  []byte
+	Txs []models.Tx
 }
 
 func GetBlock(ledgerClient *ledger.Client, blocknum uint64) (*CustomBlock, error) {
@@ -78,7 +72,6 @@ func GetBlock(ledgerClient *ledger.Client, blocknum uint64) (*CustomBlock, error
 			}
 			bytesTxId, err := utils.GetOrComputeTxIDFromEnvelope(bytesEnvelope)
 			if err != nil {
-				//fmt.Printf("Can't extract tx id in bytes format: ", err)
 				return nil, err
 			}
 
@@ -87,13 +80,12 @@ func GetBlock(ledgerClient *ledger.Client, blocknum uint64) (*CustomBlock, error
 				// get only those txs that changes state
 				if len(nsRwSet.KvRwSet.Writes) != 0 {
 
-					//fmt.Println(nsRwSet.KvRwSet.Writes)
 					jsonPayload, err := json.Marshal(nsRwSet.KvRwSet.Writes)
 					if err != nil {
 						return nil, err
 					}
 
-					tx := Tx{
+					tx := models.Tx{
 						hash,
 						blocknum,
 						string(bytesTxId),
@@ -102,8 +94,6 @@ func GetBlock(ledgerClient *ledger.Client, blocknum uint64) (*CustomBlock, error
 					customBlock.Txs = append(customBlock.Txs, tx)
 
 				}
-				//fmt.Println(nsRwSet.KvRwSet.Reads)
-				//fmt.Println(nsRwSet.KvRwSet.Writes)
 			}
 		}
 	}
diff --git a/client/client.go b/client/client.go
index 6e60436..4497de7 100644
--- a/client/client.go
+++ b/client/client.go
@@ -1,26 +1,71 @@
 package main
 
 import (
-	"encoding/binary"
 	"encoding/json"
-	"fabex/models"
-	pb "fabex/proto"
 	"fmt"
+	"github.com/vadiminshakov/fabex/models"
+	pb "github.com/vadiminshakov/fabex/proto"
 	"golang.org/x/net/context"
 	"google.golang.org/grpc"
 	"io"
 	"log"
 )
 
-func ReadStream(addr string, port string, startblock, endblock int64) error {
+var (
+	client pb.FabexClient
+	addr = "0.0.0.0"
+	port = "6000"
+)
+
+func init() {
 	conn, err := grpc.Dial(fmt.Sprintf("%s:%s", addr, port), grpc.WithInsecure())
 	if err != nil {
 		log.Fatalf("failed to connect: %s", err)
 	}
-	defer conn.Close()
 
-	client := pb.NewFabexClient(conn)
-	stream, err := client.Explore(context.Background(), &pb.Request{Startblock: startblock, Endblock: endblock})
+	client = pb.NewFabexClient(conn)
+}
+
+func ReadStream(startblock, endblock int) error {
+
+	stream, err := client.Explore(context.Background(), &pb.RequestRange{Startblock: int64(startblock), Endblock: int64(endblock)})
+	if err != nil {
+		return err
+	}
+
+	log.Println("Started stream")
+
+	for {
+		in, err := stream.Recv()
+		log.Println("Received value")
+		if err == io.EOF {
+			log.Println("Steam is empty")
+		}
+		if err != nil {
+			log.Println(err)
+			return err
+		}
+		log.Printf("\nBlock number: %d\nBlock hash: %s\nTx id: %s\nPayload:\n", in.Blocknum, in.Hash, in.Txid)
+		var cc []models.Chaincode
+		err = json.Unmarshal(in.Payload, &cc)
+		if err != nil {
+			log.Printf("Unmarshalling error: %s", err)
+		}
+		for _, val := range cc {
+
+			fmt.Printf("Key: %s\nValue: %s\n", val.Key, in.Payload)
+		}
+	}
+
+	return nil
+}
+
+func GetByTxId(filter *pb.RequestFilter) error {
+
+	stream, err := client.GetByTxId(context.Background(), filter)
+	if err != nil {
+		return err
+	}
 
 	log.Println("Started stream")
 
@@ -42,7 +87,7 @@ func ReadStream(addr string, port string, startblock, endblock int64) error {
 		}
 		for _, val := range cc {
 
-			fmt.Printf("Key: %s\nValue: %v\n", val.Key, in.Payload)
+			fmt.Printf("Key: %s\nValue: %s\n", val.Key, in.Payload)
 		}
 	}
 
@@ -50,5 +95,8 @@ func ReadStream(addr string, port string, startblock, endblock int64) error {
 }
 
 func main() {
-	ReadStream("0.0.0.0", "6000", 1, 15)
+	//ReadStream(1, 15)
+	err := GetByTxId(&pb.RequestFilter{Blocknum:2})
+	if err != nil { log.Fatal(err) }
+
 }
diff --git a/config.yaml b/config.yaml
index 838322a..802696c 100644
--- a/config.yaml
+++ b/config.yaml
@@ -1,6 +1,17 @@
+Fabric:
+  user: admin
+  secret: adminpw
+  org: rzd
+  channel: wheelsets
+  connectionProfile: /home/vadim/wheelsets-fabric/wheelsets-core/app/blockchain/fabric/config-dev-2orgs.yaml
+
 Db:
   host: localhost
   port: 5432
   dbuser: postgres
   dbsecret: 1
-  dbname: txs
\ No newline at end of file
+  dbname: txs
+
+GRPCServer:
+  host: localhost
+  port: 6000
\ No newline at end of file
diff --git a/db/db.go b/db/db.go
index 94d7ad5..2d3244b 100644
--- a/db/db.go
+++ b/db/db.go
@@ -1,10 +1,13 @@
 package db
 
+import pb "github.com/vadiminshakov/fabex/proto"
+
 type DbManager interface {
 	Connect() error
 	Init() error
 	Insert(txid, blockhash string, blocknum uint64, payload []byte) error
 	QueryBlockByHash(hash string) (*QueryResult, error)
+	GetByTxId(filter *pb.RequestFilter) ([]*QueryResult, error)
 	QueryAll() ([]QueryResult, error)
 }
 
diff --git a/db/mongodb.go b/db/mongodb.go
index 4b961b0..3551ab6 100644
--- a/db/mongodb.go
+++ b/db/mongodb.go
@@ -2,6 +2,7 @@ package db
 
 import (
 	"context"
+	pb "github.com/vadiminshakov/fabex/proto"
 	"go.mongodb.org/mongo-driver/bson"
 	"go.mongodb.org/mongo-driver/bson/primitive"
 	"go.mongodb.org/mongo-driver/mongo"
@@ -9,6 +10,7 @@ import (
 	"go.mongodb.org/mongo-driver/mongo/readpref"
 	"log"
 	"time"
+	"fmt"
 )
 
 type DBmongo struct {
@@ -70,6 +72,34 @@ func (db *DBmongo) QueryBlockByHash(hash string) (*QueryResult, error) {
 	return &QueryResult{result.Txid, result.Blockhash, result.Blocknum, result.Payload}, nil
 }
 
+func (db *DBmongo) GetByTxId(filter *pb.RequestFilter) ([]*QueryResult, error) {
+	collection := db.Instance.Database("blocks").Collection("txs")
+	filterOpts := bson.M{"Txid": filter.Txid}
+	ctx, _ := context.WithTimeout(context.Background(), 5*time.Second)
+
+	cur, err := collection.Find(ctx, filterOpts)
+	if err != nil {
+		return nil, err
+	}
+
+	defer cur.Close(ctx)
+
+	var results []*QueryResult
+	for cur.Next(ctx) {
+		var result *QueryResult
+		err := cur.Decode(&result)
+		if err != nil {
+			return nil, err
+		}
+		results = append(results, result)
+	}
+	if err := cur.Err(); err != nil {
+		return nil, err
+	}
+fmt.Println(results)
+	return results, nil
+}
+
 func (db *DBmongo) QueryAll() ([]QueryResult, error) {
 	arr := []QueryResult{}
 
diff --git a/db/postgres.go b/db/postgres.go
index cf99199..2c207ce 100644
--- a/db/postgres.go
+++ b/db/postgres.go
@@ -4,6 +4,7 @@ import (
 	"database/sql"
 	"fmt"
 	_ "github.com/lib/pq"
+	pb "github.com/vadiminshakov/fabex/proto"
 	"log"
 )
 
@@ -153,3 +154,8 @@ func (db *DB) QueryAll() ([]QueryResult, error) {
 
 	return arr, nil
 }
+
+// dummy stub
+func (db *DB) GetByTxId(filter *pb.RequestFilter) ([]*QueryResult, error) {
+	return nil, nil
+}
diff --git a/fabex.go b/fabex.go
index fa90cfa..ad5f8fc 100644
--- a/fabex.go
+++ b/fabex.go
@@ -2,11 +2,6 @@ package main
 
 import (
 	"encoding/json"
-	"fabex/blockfetcher"
-	"fabex/db"
-	"fabex/helpers"
-	"fabex/models"
-	pb "fabex/proto"
 	"flag"
 	"fmt"
 	"github.com/hyperledger/fabric-sdk-go/pkg/client/channel"
@@ -14,9 +9,13 @@ import (
 	"github.com/hyperledger/fabric-sdk-go/pkg/common/logging"
 	"github.com/hyperledger/fabric-sdk-go/pkg/core/config"
 	"github.com/hyperledger/fabric-sdk-go/pkg/fabsdk"
+	"github.com/spf13/viper"
+	"github.com/vadiminshakov/fabex/blockfetcher"
+	"github.com/vadiminshakov/fabex/db"
+	"github.com/vadiminshakov/fabex/helpers"
+	"github.com/vadiminshakov/fabex/models"
+	pb "github.com/vadiminshakov/fabex/proto"
 	"google.golang.org/grpc"
-	yaml "gopkg.in/yaml.v2"
-	"io/ioutil"
 	"log"
 	"net"
 	"os"
@@ -25,46 +24,45 @@ import (
 )
 
 var (
-	lvl         = logging.INFO
+	lvl          = logging.INFO
+	globalConfig models.Config
 )
 
 func main() {
 
 	// parse flags
-	cc := flag.String("cc", "mycc", "chaincode name")
-	user := flag.String("user", "admin", "user name")
-	secret := flag.String("secret", "adminpw", "user secret")
-	org := flag.String("org", "rzd", "org to which identity belongs")
-	channelName := flag.String("channel", "mychannel", "channel name")
 	enrolluser := flag.Bool("enrolluser", false, "enroll user (true) or not (false)")
 	task := flag.String("task", "query", "choose the task to execute")
 	forever := flag.Bool("forever", false, "explore ledger forever")
 	interval := flag.String("interval", "1s", "time interval for exploring blocks in forever mode (1s, 1h, etc)")
 	blocknum := flag.Uint64("blocknum", 0, "block number")
-	confpath := flag.String("config", "./config.yaml", "path to YAML config")
-	profile := flag.String("profile", "./connection-profile.yaml", "path to connection profile")
-	grpcAddr := flag.String("grpcaddr", "0.0.0.0", "grpc server address")
-	grpcPort := flag.String("grpcport", "6000", "grpc server port")
+	confpath := flag.String("configpath", "./", "path to YAML config")
+	confname := flag.String("configname", "config", "name of YAML config")
 	databaseSelected := flag.String("db", "mongo", "select database (mongo or postgres)")
 
 	flag.Parse()
 
 	// read config
-	data, err := ioutil.ReadFile(*confpath)
+	viper.SetConfigName(*confname)
+	viper.AddConfigPath(*confpath)
+	viper.SetConfigType("yaml")
+
+	if err := viper.ReadInConfig(); err != nil {
+		log.Fatalf("Error reading config file, %s", err)
+	}
+
+	err := viper.Unmarshal(&globalConfig)
 	if err != nil {
-		log.Println("Reading file error: ")
-		return
+		log.Fatalf("unable to decode into struct, %v", err)
 	}
 
-	var globalConfig models.Config
-	err = yaml.Unmarshal([]byte(data), &globalConfig)
 	if err != nil {
-		log.Println("Unmarshalling error: ")
+		log.Println("Reading file error: ")
 		return
 	}
 
 	fmt.Println("Reading connection profile..")
-	c := config.FromFile(*profile)
+	c := config.FromFile(globalConfig.Fabric.ConnectionProfile)
 	sdk, err := fabsdk.New(c)
 	if err != nil {
 		fmt.Printf("Failed to create new SDK: %s\n", err)
@@ -74,19 +72,19 @@ func main() {
 
 	helpers.SetupLogLevel(lvl)
 	if *enrolluser {
-		helpers.EnrollUser(sdk, *user, *secret)
+		helpers.EnrollUser(sdk, globalConfig.Fabric.User, globalConfig.Fabric.Secret)
 	}
 
-	clientChannelContext := sdk.ChannelContext(*channelName, fabsdk.WithUser(*user), fabsdk.WithOrg(*org))
+	clientChannelContext := sdk.ChannelContext(globalConfig.Fabric.Channel, fabsdk.WithUser(globalConfig.Fabric.User), fabsdk.WithOrg(globalConfig.Fabric.Org))
 	ledgerClient, err := ledger.New(clientChannelContext)
 	if err != nil {
-		fmt.Printf("Failed to create channel [%s] client: %#v", *channelName, err)
+		fmt.Printf("Failed to create channel [%s] client: %#v", globalConfig.Fabric.Channel, err)
 		os.Exit(1)
 	}
 
 	channelclient, err := channel.New(clientChannelContext)
 	if err != nil {
-		fmt.Printf("Failed to create channel [%s]:", *channelName, err)
+		fmt.Printf("Failed to create channel [%s]:", globalConfig.Fabric.Channel, err)
 	}
 
 	// choose database
@@ -104,11 +102,9 @@ func main() {
 		if err != nil {
 			log.Fatalln("DB connection failed:", err.Error())
 		}
-
-		fabex = &models.Fabex{dbInstance, channelclient, ledgerClient}
-	} else {
-		fabex = &models.Fabex{dbInstance, channelclient, ledgerClient}
 	}
+	fabex = &models.Fabex{dbInstance, channelclient, ledgerClient}
+
 	switch *task {
 	case "initdb":
 		err = fabex.Db.Init()
@@ -117,10 +113,7 @@ func main() {
 			return
 		}
 		log.Println("Database and table created successfully")
-	case "invoke":
-		helpers.InvokeCC(fabex.ChannelClient, "a", "b", "30")
-	case "query":
-		helpers.QueryCC(fabex.ChannelClient, []byte("b"), *cc)
+
 	case "channelinfo":
 		resp, err := helpers.QueryChannelInfo(fabex.LedgerClient)
 		if err != nil {
@@ -129,6 +122,7 @@ func main() {
 		fmt.Println("BlockChainInfo:", resp.BCI)
 		fmt.Println("Endorser:", resp.Endorser)
 		fmt.Println("Status:", resp.Status)
+
 	case "channelconfig":
 		helpers.QueryChannelConfig(fabex.LedgerClient)
 
@@ -139,9 +133,7 @@ func main() {
 		}
 
 		if customBlock != nil {
-
 			var cc []models.Chaincode
-
 			for _, block := range customBlock.Txs {
 
 				err = json.Unmarshal(block.Payload, &cc)
@@ -151,8 +143,9 @@ func main() {
 
 				fmt.Printf("\nBlock number: %d\nBlock hash: %s\nTxid: %s\nPayload:\n", block.Blocknum, block.Hash, block.Txid)
 				for _, val := range cc {
-					fmt.Printf("Key: %s\nValue: %v\n", val.Key, val.Value)
+					fmt.Printf("Key: %s\nValue: %s\n", val.Key, val.Value)
 				}
+
 			}
 		}
 
@@ -188,6 +181,7 @@ func main() {
 			wg.Wait()
 			log.Println("All blocks saved")
 		}
+
 	case "getall":
 		txs, err := fabex.Db.QueryAll()
 		if err != nil {
@@ -211,7 +205,7 @@ func main() {
 		}
 
 	case "grpc":
-		serv := NewFabexServer(*grpcAddr, *grpcPort, fabex)
+		serv := NewFabexServer(globalConfig.GRPCServer.Host, globalConfig.GRPCServer.Port, fabex)
 		StartGrpcServ(serv)
 	}
 }
@@ -226,7 +220,7 @@ func NewFabexServer(addr string, port string, conf *models.Fabex) *fabexServer {
 	return &fabexServer{addr, port, conf}
 }
 
-func (s *fabexServer) Explore(req *pb.Request, stream pb.Fabex_ExploreServer) error {
+func (s *fabexServer) Explore(req *pb.RequestRange, stream pb.Fabex_ExploreServer) error {
 	log.Printf("Start stream from %d block", req.Startblock)
 	// set blocks counter to latest saved in db block number value
 	var blockCounter uint64 = uint64(req.Startblock)
@@ -250,6 +244,20 @@ func (s *fabexServer) Explore(req *pb.Request, stream pb.Fabex_ExploreServer) er
 	return nil
 }
 
+func (s *fabexServer) GetByTxId(req *pb.RequestFilter, stream pb.Fabex_GetByTxIdServer) error {
+	QueryResults, err := s.Conf.Db.GetByTxId(req)
+	if err != nil {
+		return err
+	}
+
+	for _, queryResult := range QueryResults {
+		stream.Send(&pb.Reply{Txid: queryResult.Txid})
+	}
+
+	log.Println("Stream closed")
+	return nil
+}
+
 func StartGrpcServ(serv *fabexServer) {
 	grpcServer := grpc.NewServer()
 	pb.RegisterFabexServer(grpcServer, serv)
diff --git a/go.mod b/go.mod
index 0d4d09d..b659992 100644
--- a/go.mod
+++ b/go.mod
@@ -1,4 +1,4 @@
-module fabex
+module github.com/vadiminshakov/fabex
 
 go 1.11
 
@@ -36,11 +36,12 @@ require (
 	github.com/spf13/cast v1.2.0 // indirect
 	github.com/spf13/jwalterweatherman v0.0.0-20180109140146-7c0cea34c8ec // indirect
 	github.com/spf13/pflag v0.0.0-20180601132542-3ebe029320b2 // indirect
-	github.com/spf13/viper v0.0.0-20180507071007-15738813a09d // indirect
+	github.com/spf13/viper v0.0.0-20180507071007-15738813a09d
 	github.com/sykesm/zap-logfmt v0.0.2 // indirect
 	github.com/xdg/scram v0.0.0-20180814205039-7eeb5667e42c // indirect
 	github.com/xdg/stringprep v1.0.0 // indirect
 	go.mongodb.org/mongo-driver v1.1.0
+	golang.org/x/net v0.0.0-20181114220301-adae6a3d119a
 	golang.org/x/sync v0.0.0-20190227155943-e225da77a7e6 // indirect
 	google.golang.org/genproto v0.0.0-20180706232955-8b2cc369ab52 // indirect
 	google.golang.org/grpc v0.0.0-20180706180940-f3361fda2fe0
diff --git a/helpers/helpers.go b/helpers/helpers.go
index 6bdbb66..adc38ad 100644
--- a/helpers/helpers.go
+++ b/helpers/helpers.go
@@ -2,16 +2,14 @@ package helpers
 
 import (
 	"encoding/hex"
-	"fabex/blockfetcher"
-	"fabex/models"
 	"fmt"
-	"github.com/hyperledger/fabric-sdk-go/pkg/client/channel"
 	"github.com/hyperledger/fabric-sdk-go/pkg/client/ledger"
 	"github.com/hyperledger/fabric-sdk-go/pkg/client/msp"
-	"github.com/hyperledger/fabric-sdk-go/pkg/client/resmgmt"
 	"github.com/hyperledger/fabric-sdk-go/pkg/common/logging"
 	"github.com/hyperledger/fabric-sdk-go/pkg/common/providers/fab"
 	"github.com/hyperledger/fabric-sdk-go/pkg/fabsdk"
+	"github.com/vadiminshakov/fabex/blockfetcher"
+	"github.com/vadiminshakov/fabex/models"
 	"log"
 	"sync"
 )
@@ -78,54 +76,6 @@ func Explore(wg *sync.WaitGroup, fab *models.Fabex) error {
 	return nil
 }
 
-func QueryInstalledCC(sdk *fabsdk.FabricSDK, user string) {
-	userContext := sdk.Context(fabsdk.WithUser(user))
-
-	resClient, err := resmgmt.New(userContext)
-	if err != nil {
-		fmt.Println("Failed to create resmgmt: ", err)
-	}
-
-	resp2, err := resClient.QueryInstalledChaincodes()
-	if err != nil {
-		fmt.Println("Failed to query installed cc: ", err)
-	}
-	fmt.Println("Installed cc: ", resp2.GetChaincodes())
-}
-
-func QueryCC(client *channel.Client, name []byte, chaincodeId string) string {
-	var queryArgs = [][]byte{name}
-	response, err := client.Query(channel.Request{
-		ChaincodeID: chaincodeId,
-		Fcn:         "query",
-		Args:        queryArgs,
-	}, channel.WithTargetEndpoints("grpcs://localhost:7051"))
-
-	if err != nil {
-		fmt.Println("Failed to query: ", err)
-	}
-
-	ret := string(response.Payload)
-	fmt.Println("Chaincode status: ", response.ChaincodeStatus)
-	fmt.Println("Payload: ", ret)
-	return ret
-}
-
-func InvokeCC(client *channel.Client, chaincodeId string, args ...string) {
-	fmt.Println("Invoke cc with new value:", args)
-	invokeArgs := [][]byte{[]byte(args[0]), []byte(args[1]), []byte(args[2])}
-
-	_, err := client.Execute(channel.Request{
-		ChaincodeID: chaincodeId,
-		Fcn:         "invoke",
-		Args:        invokeArgs,
-	})
-
-	if err != nil {
-		fmt.Printf("Failed to invoke: %+v\n", err)
-	}
-}
-
 func EnrollUser(sdk *fabsdk.FabricSDK, user, secret string) {
 	ctx := sdk.Context()
 	mspClient, err := msp.New(ctx)
diff --git a/models/models.go b/models/models.go
index c2fa905..5e90beb 100644
--- a/models/models.go
+++ b/models/models.go
@@ -1,9 +1,9 @@
 package models
 
 import (
-	"fabex/db"
 	"github.com/hyperledger/fabric-sdk-go/pkg/client/channel"
 	"github.com/hyperledger/fabric-sdk-go/pkg/client/ledger"
+	"github.com/vadiminshakov/fabex/db"
 )
 
 type Fabex struct {
@@ -12,19 +12,55 @@ type Fabex struct {
 	LedgerClient  *ledger.Client
 }
 
-type Db struct {
-	Host     string `yaml:"host"`
-	Port     int    `yaml:"port"`
-	Dbuser   string `yaml:"dbuser"`
-	Dbsecret string `yaml:"dbsecret"`
-	Dbname   string `yaml:dbname`
+type DB struct {
+	Host     string
+	Port     int
+	Dbuser   string
+	Dbsecret string
+	Dbname   string
+}
+
+type GRPCServer struct {
+	Host string
+	Port string
+}
+
+type Fabric struct {
+	User              string
+	Secret            string
+	Org               string
+	Channel           string
+	ConnectionProfile string
 }
 
 type Config struct {
-	DB Db `yaml:"Db"`
+	DB
+	Fabric
+	GRPCServer
 }
 
 type Chaincode struct {
 	Key   string `json:"key"`
 	Value []byte `json:"value"`
 }
+
+type Tx struct {
+	Hash     string
+	Blocknum uint64
+	Txid     string
+	Payload  []byte
+}
+
+type QueryResult struct {
+	Txid      string `json:"txid"`
+	Blockhash string `json:"blockhash"`
+	Blocknum  uint64 `json:"blocknum"`
+	Payload   []byte `json:"payload"`
+}
+
+type QueryResultMongo struct {
+	Txid      string                       `json:"txid"`
+	Blockhash string                       `json:"blockhash"`
+	Blocknum  map[string]uint64            `json:"blocknum"`
+	Payload   map[string]map[string]string `json:"payload"`
+}
diff --git a/proto/fabex.pb.go b/proto/fabex.pb.go
index 78453e1..9dad0c0 100644
--- a/proto/fabex.pb.go
+++ b/proto/fabex.pb.go
@@ -24,7 +24,7 @@ var _ = math.Inf
 // proto package needs to be updated.
 const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package
 
-type Request struct {
+type RequestRange struct {
 	Startblock           int64    `protobuf:"varint,1,opt,name=startblock,proto3" json:"startblock,omitempty"`
 	Endblock             int64    `protobuf:"varint,2,opt,name=endblock,proto3" json:"endblock,omitempty"`
 	XXX_NoUnkeyedLiteral struct{} `json:"-"`
@@ -32,39 +32,39 @@ type Request struct {
 	XXX_sizecache        int32    `json:"-"`
 }
 
-func (m *Request) Reset()         { *m = Request{} }
-func (m *Request) String() string { return proto.CompactTextString(m) }
-func (*Request) ProtoMessage()    {}
-func (*Request) Descriptor() ([]byte, []int) {
+func (m *RequestRange) Reset()         { *m = RequestRange{} }
+func (m *RequestRange) String() string { return proto.CompactTextString(m) }
+func (*RequestRange) ProtoMessage()    {}
+func (*RequestRange) Descriptor() ([]byte, []int) {
 	return fileDescriptor_d7d7206373264ff4, []int{0}
 }
 
-func (m *Request) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_Request.Unmarshal(m, b)
+func (m *RequestRange) XXX_Unmarshal(b []byte) error {
+	return xxx_messageInfo_RequestRange.Unmarshal(m, b)
 }
-func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
+func (m *RequestRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
+	return xxx_messageInfo_RequestRange.Marshal(b, m, deterministic)
 }
-func (m *Request) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_Request.Merge(m, src)
+func (m *RequestRange) XXX_Merge(src proto.Message) {
+	xxx_messageInfo_RequestRange.Merge(m, src)
 }
-func (m *Request) XXX_Size() int {
-	return xxx_messageInfo_Request.Size(m)
+func (m *RequestRange) XXX_Size() int {
+	return xxx_messageInfo_RequestRange.Size(m)
 }
-func (m *Request) XXX_DiscardUnknown() {
-	xxx_messageInfo_Request.DiscardUnknown(m)
+func (m *RequestRange) XXX_DiscardUnknown() {
+	xxx_messageInfo_RequestRange.DiscardUnknown(m)
 }
 
-var xxx_messageInfo_Request proto.InternalMessageInfo
+var xxx_messageInfo_RequestRange proto.InternalMessageInfo
 
-func (m *Request) GetStartblock() int64 {
+func (m *RequestRange) GetStartblock() int64 {
 	if m != nil {
 		return m.Startblock
 	}
 	return 0
 }
 
-func (m *Request) GetEndblock() int64 {
+func (m *RequestRange) GetEndblock() int64 {
 	if m != nil {
 		return m.Endblock
 	}
@@ -134,28 +134,94 @@ func (m *Reply) GetPayload() []byte {
 	return nil
 }
 
+type RequestFilter struct {
+	Txid                 string   `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
+	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
+	Blocknum             int64    `protobuf:"varint,3,opt,name=blocknum,proto3" json:"blocknum,omitempty"`
+	Payload              []byte   `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload,omitempty"`
+	XXX_NoUnkeyedLiteral struct{} `json:"-"`
+	XXX_unrecognized     []byte   `json:"-"`
+	XXX_sizecache        int32    `json:"-"`
+}
+
+func (m *RequestFilter) Reset()         { *m = RequestFilter{} }
+func (m *RequestFilter) String() string { return proto.CompactTextString(m) }
+func (*RequestFilter) ProtoMessage()    {}
+func (*RequestFilter) Descriptor() ([]byte, []int) {
+	return fileDescriptor_d7d7206373264ff4, []int{2}
+}
+
+func (m *RequestFilter) XXX_Unmarshal(b []byte) error {
+	return xxx_messageInfo_RequestFilter.Unmarshal(m, b)
+}
+func (m *RequestFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
+	return xxx_messageInfo_RequestFilter.Marshal(b, m, deterministic)
+}
+func (m *RequestFilter) XXX_Merge(src proto.Message) {
+	xxx_messageInfo_RequestFilter.Merge(m, src)
+}
+func (m *RequestFilter) XXX_Size() int {
+	return xxx_messageInfo_RequestFilter.Size(m)
+}
+func (m *RequestFilter) XXX_DiscardUnknown() {
+	xxx_messageInfo_RequestFilter.DiscardUnknown(m)
+}
+
+var xxx_messageInfo_RequestFilter proto.InternalMessageInfo
+
+func (m *RequestFilter) GetTxid() string {
+	if m != nil {
+		return m.Txid
+	}
+	return ""
+}
+
+func (m *RequestFilter) GetHash() string {
+	if m != nil {
+		return m.Hash
+	}
+	return ""
+}
+
+func (m *RequestFilter) GetBlocknum() int64 {
+	if m != nil {
+		return m.Blocknum
+	}
+	return 0
+}
+
+func (m *RequestFilter) GetPayload() []byte {
+	if m != nil {
+		return m.Payload
+	}
+	return nil
+}
+
 func init() {
-	proto.RegisterType((*Request)(nil), "fabex.Request")
+	proto.RegisterType((*RequestRange)(nil), "fabex.RequestRange")
 	proto.RegisterType((*Reply)(nil), "fabex.Reply")
+	proto.RegisterType((*RequestFilter)(nil), "fabex.RequestFilter")
 }
 
 func init() { proto.RegisterFile("fabex.proto", fileDescriptor_d7d7206373264ff4) }
 
 var fileDescriptor_d7d7206373264ff4 = []byte{
-	// 196 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xc1, 0x8a, 0x83, 0x40,
-	0x10, 0x44, 0x77, 0x56, 0x5d, 0xd7, 0x5e, 0xd9, 0x43, 0x9f, 0x06, 0x0f, 0x8b, 0x78, 0x12, 0x16,
-	0x24, 0x24, 0xf9, 0x05, 0xf3, 0x01, 0xf3, 0x07, 0x63, 0x9c, 0x60, 0xc8, 0xc4, 0x99, 0xe8, 0x08,
-	0xfa, 0xf7, 0xc1, 0x36, 0x4a, 0x6e, 0xfd, 0xaa, 0xa8, 0xa2, 0x0b, 0x7e, 0x2e, 0xb2, 0x52, 0x63,
-	0x61, 0x3b, 0xe3, 0x0c, 0x06, 0x04, 0x59, 0x09, 0xa1, 0x50, 0x8f, 0x41, 0xf5, 0x0e, 0xff, 0x00,
-	0x7a, 0x27, 0x3b, 0x57, 0x69, 0x73, 0xbe, 0x71, 0x96, 0xb2, 0xdc, 0x13, 0x6f, 0x0a, 0x26, 0xf0,
-	0xad, 0xda, 0x7a, 0x71, 0x3f, 0xc9, 0xdd, 0x38, 0x53, 0x10, 0x08, 0x65, 0xf5, 0x84, 0x08, 0xbe,
-	0x1b, 0xaf, 0x35, 0xc5, 0x23, 0x41, 0xf7, 0xac, 0x35, 0xb2, 0x6f, 0x28, 0x14, 0x09, 0xba, 0xe7,
-	0x32, 0x4a, 0xb6, 0xc3, 0x9d, 0x7b, 0x4b, 0xd9, 0xca, 0xc8, 0x21, 0xb4, 0x72, 0xd2, 0x46, 0xd6,
-	0xdc, 0x4f, 0x59, 0x1e, 0x8b, 0x15, 0xf7, 0x47, 0x08, 0x4e, 0xf3, 0xdb, 0xf8, 0x0f, 0x61, 0x39,
-	0x5a, 0x6d, 0x3a, 0x85, 0xbf, 0xc5, 0x32, 0xeb, 0x35, 0x23, 0x89, 0x37, 0xb6, 0x7a, 0xca, 0x3e,
-	0x76, 0xac, 0xfa, 0xa2, 0xc5, 0x87, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x60, 0x8f, 0x30, 0x5d,
-	0x00, 0x01, 0x00, 0x00,
+	// 234 bytes of a gzipped FileDescriptorProto
+	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x91, 0xcd, 0x4e, 0xc3, 0x30,
+	0x10, 0x84, 0x15, 0xda, 0x50, 0xb2, 0x84, 0xcb, 0xc2, 0x21, 0xea, 0x01, 0x55, 0x39, 0xf5, 0x14,
+	0xf1, 0xf3, 0x06, 0x48, 0x14, 0xc1, 0xd1, 0xe2, 0x05, 0x1c, 0xbc, 0xd0, 0x82, 0x1b, 0x1b, 0xc7,
+	0x95, 0xec, 0xb7, 0x47, 0x59, 0xd3, 0x2a, 0x70, 0xef, 0x6d, 0x67, 0x56, 0xdf, 0x7a, 0x34, 0x86,
+	0xf3, 0x77, 0xd9, 0x52, 0x68, 0xac, 0x33, 0xde, 0x60, 0xce, 0xa2, 0x7e, 0x81, 0x52, 0xd0, 0xf7,
+	0x8e, 0x7a, 0x2f, 0x64, 0xf7, 0x41, 0x78, 0x0d, 0xd0, 0x7b, 0xe9, 0x7c, 0xab, 0xcd, 0xdb, 0x57,
+	0x95, 0x2d, 0xb2, 0xe5, 0x44, 0x8c, 0x1c, 0x9c, 0xc3, 0x19, 0x75, 0x2a, 0x6d, 0x4f, 0x78, 0x7b,
+	0xd0, 0x35, 0x41, 0x2e, 0xc8, 0xea, 0x88, 0x08, 0x53, 0x1f, 0x36, 0x8a, 0xf1, 0x42, 0xf0, 0x3c,
+	0x78, 0x6b, 0xd9, 0xaf, 0x19, 0x2a, 0x04, 0xcf, 0xc3, 0x31, 0x26, 0xbb, 0xdd, 0xb6, 0x9a, 0xa4,
+	0x63, 0x7b, 0x8d, 0x15, 0xcc, 0xac, 0x8c, 0xda, 0x48, 0x55, 0x4d, 0x17, 0xd9, 0xb2, 0x14, 0x7b,
+	0x59, 0x6f, 0xe1, 0xe2, 0x37, 0xf2, 0x6a, 0xa3, 0x3d, 0xb9, 0xe3, 0x3e, 0x77, 0xf7, 0x09, 0xf9,
+	0x6a, 0xa8, 0x0a, 0x1b, 0x98, 0x3d, 0x06, 0xab, 0x8d, 0x23, 0xbc, 0x6c, 0x52, 0x95, 0xe3, 0xea,
+	0xe6, 0xe5, 0xc1, 0xb4, 0x3a, 0xde, 0x64, 0x78, 0x0b, 0xc5, 0x13, 0xf9, 0x87, 0xf8, 0x1a, 0x9e,
+	0x15, 0x5e, 0xfd, 0x25, 0x52, 0xf2, 0xff, 0x48, 0x7b, 0xca, 0x7f, 0x73, 0xff, 0x13, 0x00, 0x00,
+	0xff, 0xff, 0xc2, 0x1f, 0x07, 0xdb, 0xaa, 0x01, 0x00, 0x00,
 }
 
 // Reference imports to suppress errors if they are not otherwise used.
@@ -170,7 +236,8 @@ const _ = grpc.SupportPackageIsVersion4
 //
 // For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
 type FabexClient interface {
-	Explore(ctx context.Context, in *Request, opts ...grpc.CallOption) (Fabex_ExploreClient, error)
+	Explore(ctx context.Context, in *RequestRange, opts ...grpc.CallOption) (Fabex_ExploreClient, error)
+	GetByTxId(ctx context.Context, in *RequestFilter, opts ...grpc.CallOption) (Fabex_GetByTxIdClient, error)
 }
 
 type fabexClient struct {
@@ -181,7 +248,7 @@ func NewFabexClient(cc *grpc.ClientConn) FabexClient {
 	return &fabexClient{cc}
 }
 
-func (c *fabexClient) Explore(ctx context.Context, in *Request, opts ...grpc.CallOption) (Fabex_ExploreClient, error) {
+func (c *fabexClient) Explore(ctx context.Context, in *RequestRange, opts ...grpc.CallOption) (Fabex_ExploreClient, error) {
 	stream, err := c.cc.NewStream(ctx, &_Fabex_serviceDesc.Streams[0], "/fabex.Fabex/Explore", opts...)
 	if err != nil {
 		return nil, err
@@ -213,25 +280,61 @@ func (x *fabexExploreClient) Recv() (*Reply, error) {
 	return m, nil
 }
 
+func (c *fabexClient) GetByTxId(ctx context.Context, in *RequestFilter, opts ...grpc.CallOption) (Fabex_GetByTxIdClient, error) {
+	stream, err := c.cc.NewStream(ctx, &_Fabex_serviceDesc.Streams[1], "/fabex.Fabex/GetByTxId", opts...)
+	if err != nil {
+		return nil, err
+	}
+	x := &fabexGetByTxIdClient{stream}
+	if err := x.ClientStream.SendMsg(in); err != nil {
+		return nil, err
+	}
+	if err := x.ClientStream.CloseSend(); err != nil {
+		return nil, err
+	}
+	return x, nil
+}
+
+type Fabex_GetByTxIdClient interface {
+	Recv() (*Reply, error)
+	grpc.ClientStream
+}
+
+type fabexGetByTxIdClient struct {
+	grpc.ClientStream
+}
+
+func (x *fabexGetByTxIdClient) Recv() (*Reply, error) {
+	m := new(Reply)
+	if err := x.ClientStream.RecvMsg(m); err != nil {
+		return nil, err
+	}
+	return m, nil
+}
+
 // FabexServer is the server API for Fabex service.
 type FabexServer interface {
-	Explore(*Request, Fabex_ExploreServer) error
+	Explore(*RequestRange, Fabex_ExploreServer) error
+	GetByTxId(*RequestFilter, Fabex_GetByTxIdServer) error
 }
 
 // UnimplementedFabexServer can be embedded to have forward compatible implementations.
 type UnimplementedFabexServer struct {
 }
 
-func (*UnimplementedFabexServer) Explore(req *Request, srv Fabex_ExploreServer) error {
+func (*UnimplementedFabexServer) Explore(req *RequestRange, srv Fabex_ExploreServer) error {
 	return status.Errorf(codes.Unimplemented, "method Explore not implemented")
 }
+func (*UnimplementedFabexServer) GetByTxId(req *RequestFilter, srv Fabex_GetByTxIdServer) error {
+	return status.Errorf(codes.Unimplemented, "method GetByTxId not implemented")
+}
 
 func RegisterFabexServer(s *grpc.Server, srv FabexServer) {
 	s.RegisterService(&_Fabex_serviceDesc, srv)
 }
 
 func _Fabex_Explore_Handler(srv interface{}, stream grpc.ServerStream) error {
-	m := new(Request)
+	m := new(RequestRange)
 	if err := stream.RecvMsg(m); err != nil {
 		return err
 	}
@@ -251,6 +354,27 @@ func (x *fabexExploreServer) Send(m *Reply) error {
 	return x.ServerStream.SendMsg(m)
 }
 
+func _Fabex_GetByTxId_Handler(srv interface{}, stream grpc.ServerStream) error {
+	m := new(RequestFilter)
+	if err := stream.RecvMsg(m); err != nil {
+		return err
+	}
+	return srv.(FabexServer).GetByTxId(m, &fabexGetByTxIdServer{stream})
+}
+
+type Fabex_GetByTxIdServer interface {
+	Send(*Reply) error
+	grpc.ServerStream
+}
+
+type fabexGetByTxIdServer struct {
+	grpc.ServerStream
+}
+
+func (x *fabexGetByTxIdServer) Send(m *Reply) error {
+	return x.ServerStream.SendMsg(m)
+}
+
 var _Fabex_serviceDesc = grpc.ServiceDesc{
 	ServiceName: "fabex.Fabex",
 	HandlerType: (*FabexServer)(nil),
@@ -261,6 +385,11 @@ var _Fabex_serviceDesc = grpc.ServiceDesc{
 			Handler:       _Fabex_Explore_Handler,
 			ServerStreams: true,
 		},
+		{
+			StreamName:    "GetByTxId",
+			Handler:       _Fabex_GetByTxId_Handler,
+			ServerStreams: true,
+		},
 	},
 	Metadata: "fabex.proto",
 }
diff --git a/proto/fabex.proto b/proto/fabex.proto
index 01fe636..23038bb 100644
--- a/proto/fabex.proto
+++ b/proto/fabex.proto
@@ -2,11 +2,11 @@ syntax = "proto3";
 package fabex;
 
 service Fabex {
-    rpc Explore (Request) returns (stream Reply) {
-    }
+    rpc Explore(RequestRange) returns (stream Reply);
+    rpc GetByTxId(RequestFilter) returns (stream Reply);
 }
 
-message Request {
+message RequestRange {
     int64 startblock = 1;
     int64 endblock = 2;
 }
@@ -16,4 +16,11 @@ message Reply {
     string hash = 2;
     int64 blocknum = 3;
     bytes payload = 4;
+}
+
+message RequestFilter {
+    string txid = 1;
+    string hash = 2;
+    int64 blocknum = 3;
+    bytes payload = 4;
 }
\ No newline at end of file
